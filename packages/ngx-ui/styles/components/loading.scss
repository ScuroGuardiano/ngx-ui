/*!
  Ionicons, v1.4.1
  Created by Ben Sperry for the Ionic Framework, http://ionicons.com/
  https://twitter.com/benjsperry  https://twitter.com/ionicframework
  MIT License: https://github.com/driftyco/ionicons
*/

.icon-loading {
  animation: spin 1s infinite linear;
  font-size: 2rem;
  line-height: 0;
  height: 2rem;
  display: inline-block;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.ngx-preloader {
  --ngx-ui-preloader-duration: 1.8s;
  --ngx-ui-preloader-color: #02aaff;
  --ngx-ui-preloader-color-2: #00fff4;
  --ngx-ui-preloader-easing: cubic-bezier(0.8, 0, 0.4, 0.8);

  margin: 3.125rem;
  width: 12.5rem;
  height: 12.5rem;
  position: relative;
  animation: arc-spinner-rotator-arc calc(var(--ngx-ui-preloader-duration) * 3)
    linear infinite;

  .arc {
    position: absolute;
    top: 50%;
    left: 0;
    height: 0.1875rem;
    width: 100%;
    // border: 1px solid red;
    border-right: 0.625rem solid var(--ngx-ui-preloader-color);
    transform: rotateZ(0deg);
    animation: arc-spinner-rotator-arc var(--ngx-ui-preloader-duration)
        var(--ngx-ui-preloader-easing) 0s infinite,
      arc-spinner-colors (calc(var(--ngx-ui-preloader-duration) * 2))
        ease-in-out infinite;
  }

  $num: 24;
  @for $i from 0 through $num {
    .arc-#{$i} {
      animation-delay: calc(
          var(--ngx-ui-preloader-duration) / 5 / #{$num} * #{$i}
        ),
        0s;
    }
  }

  @keyframes arc-spinner-colors {
    0%,
    100% {
      border-color: var(--ngx-ui-preloader-color);
    }
    50% {
      border-color: var(--ngx-ui-preloader-color-2);
    }
  }

  @keyframes arc-spinner-rotator-spinner {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes arc-spinner-rotator-arc {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}

.ngx-preloader.ngx-preloader-small {
  width: 3.125rem;
  height: 3.125rem;

  .arc {
    height: 1px;
    border-right-width: 0.1875rem;
  }
}

/**
 * Based on Google Material Design Preloader
 *
 * CSS animated SVG implementation of the Google Material Design preloader
 *
 * Reference: http://goo.gl/ZfulRH
 * License: MIT
 * Author: Rudi Theunissen (rudolf.theunissen$gmail.com)
 * Version: 1.1.1
 */
.ngx-progress {
  --ngx-ui-progress-pi: 355/113;
  --ngx-ui-progress-easing: cubic-bezier(0.8, 0, 0.4, 0.8);
  --ngx-ui-progress-color: #02aaff;
  --ngx-ui-progress-color-2: #00fff4;
  --ngx-ui-progress-linecap: butt;
  --ngx-ui-progress-loops: 5; // number of points where the arc meets
  --ngx-ui-progress-arc: 0.7; // fraction of the circumference that the arc grows to
  --ngx-ui-progress-perimeter: calc(
    120px * var(--ngx-ui-progress-pi)
  ); // circumference of the raw svg inner cricle
  --ngx-ui-progress-speed: 10s; // animation time for each loop

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;
  display: inline-block;

  transform: rotateZ(0deg);
  // animation: outer ($speed * $loops) linear infinite;

  svg {
    transform: rotateZ(-90deg);

    circle {
      stroke: var(--ngx-ui-progress-color);
      opacity: 1;
      fill: none;
      stroke-linecap: var(--ngx-ui-progress-linecap);
      stroke-dasharray: var(--ngx-ui-progress-perimeter),
        var(--ngx-ui-progress-perimeter);
      stroke-dashoffset: 0;
      animation: progress-arc var(--ngx-ui-progress-speed) linear infinite,
        progress-color var(--ngx-ui-progress-speed) linear infinite;
    }
  }

  @keyframes progress-arc {
    0% {
      stroke-dasharray: 0 var(--ngx-ui-progress-perimeter);
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dasharray: var(--ngx-ui-progress-perimeter)
        var(--ngx-ui-progress-perimeter);
      stroke-dashoffset: 0;
    }
  }

  @keyframes progress-color {
    0% {
      stroke: var(--ngx-ui-progress-color-2);
    }
    100% {
      stroke: var(--ngx-ui-progress-color);
    }
  }
}
